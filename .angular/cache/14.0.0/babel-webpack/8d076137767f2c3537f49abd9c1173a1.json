{"ast":null,"code":"import { LocationService } from '../location.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectService } from '../project.service';\nimport { DataService } from '../data.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../location.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../project.service\";\nimport * as i4 from \"../data.service\";\nimport * as i5 from \"../dashboard-content/dashboard-content.component\";\nimport * as i6 from \"@angular/common\";\nexport let DashboardTopLevelComponent = /*#__PURE__*/(() => {\n  class DashboardTopLevelComponent {\n    constructor(locationService, route, projectService, dataService) {\n      this.locationService = locationService;\n      this.route = route;\n      this.projectService = projectService;\n      this.dataService = dataService;\n    }\n\n    ngOnInit() {\n      this.locationService.setTab('dashboard');\n      this.locationService.projectId = +this.route.snapshot.paramMap.get(\"id\"); // this.projectService.setProjectId(this.locationService.projectId);\n\n      this.dataService.load(`projects/${this.locationService.projectId}`, [`projects/${this.locationService.projectId}`]);\n      this.project = this.dataService.values[`projects/${this.locationService.projectId}`];\n    }\n\n    ngOnDestroy() {\n      this.dataService.unload(`projects/${this.locationService.projectId}`, [`projects/${this.locationService.projectId}`]);\n    }\n\n  }\n\n  DashboardTopLevelComponent.ɵfac = function DashboardTopLevelComponent_Factory(t) {\n    return new (t || DashboardTopLevelComponent)(i0.ɵɵdirectiveInject(i1.LocationService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ProjectService), i0.ɵɵdirectiveInject(i4.DataService));\n  };\n\n  DashboardTopLevelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardTopLevelComponent,\n    selectors: [[\"sb-dashboard-top-level\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[3, \"project\"]],\n    template: function DashboardTopLevelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"sb-dashboard-content\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"project\", i0.ɵɵpipeBind1(1, 1, ctx.project));\n      }\n    },\n    dependencies: [i5.DashboardContentComponent, i6.AsyncPipe]\n  });\n  return DashboardTopLevelComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}