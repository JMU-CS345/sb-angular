{"ast":null,"code":"import { Api } from './api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api\";\nexport let EpicsService = /*#__PURE__*/(() => {\n  class EpicsService {\n    constructor(api) {\n      this.api = api;\n    }\n\n    reorder(projectId, order) {\n      this.api.patch('api/projects/' + projectId, {\n        project: {\n          epic_order: order\n        }\n      }).subscribe();\n    }\n\n    save(epic) {\n      return this.api.patch(`api/epics/${epic.id}`, {\n        epic: {\n          id: epic.id,\n          project_id: epic.project.id,\n          title: epic.title,\n          description: epic.description,\n          size: epic.size,\n          color: epic.color\n        }\n      });\n    }\n\n    createEpic(epic) {\n      return this.api.post(`api/projects/${epic.project.id}/epics`, {\n        epic: epic\n      });\n    }\n\n    deleteEpic(epicId) {\n      return this.api.delete(`api/epics/${epicId}`);\n    }\n\n    removeIssue(epic, issue) {\n      return this.api.patch(`api/epics/${epic.id}/remove_issue`, {\n        issue: {\n          id: issue.id\n        }\n      });\n    }\n\n    reorderIssues(epic, fromIndex, toIndex) {\n      return this.api.patch(`api/epics/${epic.id}/reorder_issues`, {\n        data: {\n          fromIndex: fromIndex,\n          toIndex: toIndex\n        }\n      });\n    }\n\n    addIssue(epicId, issue, index = -1) {\n      return this.api.patch(`api/epics/${epicId}/add_issue`, {\n        data: {\n          issue_id: issue.id,\n          index: index\n        }\n      });\n    }\n\n  }\n\n  EpicsService.ɵfac = function EpicsService_Factory(t) {\n    return new (t || EpicsService)(i0.ɵɵinject(i1.Api));\n  };\n\n  EpicsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EpicsService,\n    factory: EpicsService.ɵfac,\n    providedIn: 'root'\n  });\n  return EpicsService;\n})();","map":null,"metadata":{},"sourceType":"module"}