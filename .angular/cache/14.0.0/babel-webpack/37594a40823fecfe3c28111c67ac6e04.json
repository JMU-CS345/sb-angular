{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { Base } from '../base';\nimport { DataService } from '../data.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../checkable-task-entry/checkable-task-entry.component\";\nconst _c0 = [\"checkbox\"];\n\nfunction CheckableTaskListComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"No Tasks\");\n  }\n}\n\nfunction CheckableTaskListComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"sb-checkable-task-entry\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"task\", task_r4);\n  }\n}\n\nfunction CheckableTaskListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CheckableTaskListComponent_div_2_div_1_Template, 2, 1, \"div\", 2);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", (tmp_0_0 = i0.ɵɵpipeBind1(2, 1, ctx_r2.tasks$)) == null ? null : tmp_0_0.tasks.list);\n  }\n}\n\nexport let CheckableTaskListComponent = /*#__PURE__*/(() => {\n  class CheckableTaskListComponent extends Base {\n    constructor(dataService) {\n      super();\n      this.dataService = dataService;\n      this.percentComplete = 0;\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      this.dataService.load(`issues/${this.issue.id}/tasks`, [`issues/${this.issue.id}/tasks`]);\n      this.tasks$ = this.dataService.values[`issues/${this.issue.id}/tasks`];\n      this.sub = this.tasks$.subscribe(x => {\n        if (x) {\n          this.percentComplete = x.percentComplete;\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      this.dataService.unload(`issues/${this.issue.id}/tasks`, [`issues/${this.issue.id}/tasks`]);\n      this.sub.unsubscribe();\n    }\n\n  }\n\n  CheckableTaskListComponent.ɵfac = function CheckableTaskListComponent_Factory(t) {\n    return new (t || CheckableTaskListComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n\n  CheckableTaskListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckableTaskListComponent,\n    selectors: [[\"sb-checkable-task-list\"]],\n    viewQuery: function CheckableTaskListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkbox = _t.first);\n      }\n    },\n    inputs: {\n      issue: \"issue\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 4,\n    consts: [[\"noTasks\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"ngFor\", \"ngForOf\"], [3, \"task\"]],\n    template: function CheckableTaskListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CheckableTaskListComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, CheckableTaskListComponent_div_2_Template, 3, 3, \"div\", 1);\n        i0.ɵɵpipe(3, \"async\");\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        let tmp_0_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = i0.ɵɵpipeBind1(3, 2, ctx.tasks$)) == null ? null : tmp_0_0.tasks.list.length) > 0)(\"ngIfElse\", _r0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.CheckableTaskEntryComponent, i2.AsyncPipe],\n    styles: [\".tasks[_ngcontent-%COMP%]{min-height:30px}.task-card[_ngcontent-%COMP%]{font-size:small;background:var(--background);border:2px solid var(--card-shadow);border-radius:1px;padding:3px 3px 3px 6px;margin-top:1px}.task-card[_ngcontent-%COMP%]:hover{background:var(--card-border-hover);cursor:default}.task-card-body[_ngcontent-%COMP%]{font-size:x-small}.task-id[_ngcontent-%COMP%]{font-family:sans-serif;font-weight:700}.task-link[_ngcontent-%COMP%]{color:#444}.task-link[_ngcontent-%COMP%]:hover{text-decoration:none;color:#00f}.task-title[_ngcontent-%COMP%]{font-family:sans-serif;font-style:italic}.small-button[_ngcontent-%COMP%]{font-size:x-small}.task-description[_ngcontent-%COMP%]{font-family:sans-serif;background:#ddd}.drag-icon[_ngcontent-%COMP%]{color:#aaa}\"]\n  });\n  return CheckableTaskListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}