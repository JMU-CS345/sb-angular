{"ast":null,"code":"import { Color } from '../color';\nimport { IssuesService } from '../issues.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { callWithSnackBar } from '../util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../issues.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/expansion\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/tooltip\";\nimport * as i8 from \"@angular/material/progress-bar\";\nimport * as i9 from \"../checkable-task-list/checkable-task-list.component\";\n\nfunction ExpandableIssueComponent_mat_icon_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 18);\n  }\n}\n\nfunction ExpandableIssueComponent_mat_icon_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 19);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"background-color\": a0,\n    \"color\": a1\n  };\n};\n\nconst _c1 = function (a0) {\n  return {\n    \"selected\": a0\n  };\n};\n\nconst _c2 = function (a0) {\n  return {\n    \"faded-icon\": a0\n  };\n};\n\nexport let ExpandableIssueComponent = /*#__PURE__*/(() => {\n  class ExpandableIssueComponent {\n    constructor(issuesService, snackBar) {\n      this.issuesService = issuesService;\n      this.snackBar = snackBar;\n    }\n\n    ngOnInit() {}\n\n    clickIssue(issue) {}\n\n    fontColor(bgColor) {\n      return Color.fontColor(bgColor);\n    }\n\n    onViewIssue(event, issue) {}\n\n    setState(issue, state) {\n      if (issue.state != state) {\n        issue.state = state;\n        callWithSnackBar(this.snackBar, this.issuesService.updateState(issue, state), ['Updating state...', 'State updated', 'Error updating state']);\n      }\n    }\n\n  }\n\n  ExpandableIssueComponent.ɵfac = function ExpandableIssueComponent_Factory(t) {\n    return new (t || ExpandableIssueComponent)(i0.ɵɵdirectiveInject(i1.IssuesService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  ExpandableIssueComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExpandableIssueComponent,\n    selectors: [[\"sb-expandable-issue\"]],\n    inputs: {\n      issue: \"issue\"\n    },\n    decls: 22,\n    vars: 32,\n    consts: [[\"hideToggle\", \"true\", 1, \"m-1\", \"mt-3\", \"panel\", 3, \"click\"], [1, \"panel\", 3, \"ngStyle\"], [1, \"row\", \"w-100\", \"mt-2\"], [1, \"text-wrap\", \"issue-panel\", \"banner-text\", \"col-10\", \"py-2\"], [1, \"menu-text\"], [1, \"col-2\", \"text-right\"], [\"class\", \"sb-icon small-only\", \"fontSet\", \"fas\", \"fontIcon\", \"fa-running\", \"matTooltip\", \"In Progress\", 4, \"ngIf\"], [\"class\", \"sb-icon small-only\", \"fontSet\", \"fas\", \"fontIcon\", \"fa-check\", \"matTooltip\", \"Closed\", 4, \"ngIf\"], [\"mode\", \"determinate\", 1, \"issue-progress-bar\", 3, \"value\"], [1, \"mt-2\"], [3, \"issue\"], [\"taskList\", \"\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"State: Open\", 1, \"small-button\", \"action-button\", 3, \"ngClass\", \"click\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-ellipsis-h\", 3, \"ngClass\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"State: In Progress\", 1, \"small-button\", \"action-button\", 3, \"ngClass\", \"click\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-running\", 3, \"ngClass\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"State: Closed\", 1, \"small-button\", \"action-button\", 3, \"ngClass\", \"click\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-check\", 3, \"ngClass\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-running\", \"matTooltip\", \"In Progress\", 1, \"sb-icon\", \"small-only\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-check\", \"matTooltip\", \"Closed\", 1, \"sb-icon\", \"small-only\"]],\n    template: function ExpandableIssueComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-expansion-panel\", 0);\n        i0.ɵɵlistener(\"click\", function ExpandableIssueComponent_Template_mat_expansion_panel_click_0_listener() {\n          return ctx.clickIssue(ctx.issue);\n        });\n        i0.ɵɵelementStart(1, \"mat-expansion-panel-header\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementStart(5, \"span\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"percent\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵtemplate(9, ExpandableIssueComponent_mat_icon_9_Template, 1, 0, \"mat-icon\", 6);\n        i0.ɵɵtemplate(10, ExpandableIssueComponent_mat_icon_10_Template, 1, 0, \"mat-icon\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(11, \"mat-progress-bar\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelement(13, \"sb-checkable-task-list\", 10, 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-action-row\")(16, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function ExpandableIssueComponent_Template_button_click_16_listener() {\n          return ctx.setState(ctx.issue, \"Open\");\n        });\n        i0.ɵɵelement(17, \"mat-icon\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function ExpandableIssueComponent_Template_button_click_18_listener() {\n          return ctx.setState(ctx.issue, \"In Progress\");\n        });\n        i0.ɵɵelement(19, \"mat-icon\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function ExpandableIssueComponent_Template_button_click_20_listener() {\n          return ctx.setState(ctx.issue, \"Closed\");\n        });\n        i0.ɵɵelement(21, \"mat-icon\", 17);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(14);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(17, _c0, ctx.issue.epic && ctx.issue.epic.color ? ctx.issue.epic.color : \"#FFFFFF\", ctx.fontColor(ctx.issue.epic ? ctx.issue.epic.color : \"#FFFFFF\")));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate3(\" #\", ctx.issue.id, \" - \", ctx.issue.title, \" - \", ctx.issue.estimate, \" points - \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(_r2.percentComplete == -1 ? \"0 hours\" : i0.ɵɵpipeBind1(7, 15, _r2.percentComplete));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.issue.state == \"In Progress\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.issue.state == \"Closed\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.issue.state == \"Closed\" ? 100 : ctx.issue.state == \"In Progress\" && _r2.percentComplete == -1 ? 50 : 100 * _r2.percentComplete);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"issue\", ctx.issue);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c1, ctx.issue.state == \"Open\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c2, ctx.issue.state != \"Open\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c1, ctx.issue.state == \"In Progress\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(26, _c2, ctx.issue.state != \"In Progress\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(28, _c1, ctx.issue.state == \"Closed\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(30, _c2, ctx.issue.state != \"Closed\"));\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i3.NgStyle, i4.MatExpansionPanel, i4.MatExpansionPanelActionRow, i4.MatExpansionPanelHeader, i5.MatIcon, i6.MatButton, i7.MatTooltip, i8.MatProgressBar, i9.CheckableTaskListComponent, i3.PercentPipe],\n    styles: [\".issue-progress-bar[_ngcontent-%COMP%]{position:absolute;left:0;top:0;z-index:0;height:.5em}.selected[_ngcontent-%COMP%]{background-color:var(--selected-state-button-background);color:var(--on-selected-state-button-background)}.faded-icon[_ngcontent-%COMP%]{color:var(--unselected-state-button-icon)}.panel[_ngcontent-%COMP%]{background-color:var(--issue-state-card-background);border-radius:1px!important}.mat-expansion-panel-header[_ngcontent-%COMP%]{min-height:48px;height:initial}.action-button[_ngcontent-%COMP%]{border:1px solid var(--button-border)}.action-button[_ngcontent-%COMP%]:hover{border:1px solid var(--button-shadow);filter:drop-shadow(1px 1px var(--button-shadow))}\"]\n  });\n  return ExpandableIssueComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}