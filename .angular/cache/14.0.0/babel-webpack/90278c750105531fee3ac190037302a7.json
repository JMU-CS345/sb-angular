{"ast":null,"code":"import { Base } from '../base';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { TasksService } from '../tasks.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../tasks.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\n\nfunction EditTaskDialogComponent_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 15);\n    i0.ɵɵtext(1, \"New Task\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditTaskDialogComponent_h3_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 15);\n    i0.ɵɵtext(1, \"Edit Task\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditTaskDialogComponent_div_19_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Completed at: \", i0.ɵɵpipeBind2(2, 1, ctx_r4.task.completed_at, \"short\"), \"\");\n  }\n}\n\nfunction EditTaskDialogComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 16)(2, \"div\", 17);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 17);\n    i0.ɵɵtemplate(5, EditTaskDialogComponent_div_19_div_5_Template, 3, 4, \"div\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" State: \", ctx_r2.task.state || \"incomplete\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.task.state == \"complete\");\n  }\n}\n\nfunction EditTaskDialogComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function EditTaskDialogComponent_button_21_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.confirmDelete());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 13);\n    i0.ɵɵtext(2, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let EditTaskDialogComponent = /*#__PURE__*/(() => {\n  class EditTaskDialogComponent extends Base {\n    constructor(dialogRef, task, dialog, tasksService, _snackBar) {\n      super();\n      this.dialogRef = dialogRef;\n      this.task = task;\n      this.dialog = dialog;\n      this.tasksService = tasksService;\n      this._snackBar = _snackBar;\n      this.fb = new FormBuilder();\n    }\n\n    ngOnInit() {\n      this.editTaskForm = this.fb.group({\n        title: new FormControl(this.task.title, Validators.compose([Validators.pattern(\".*[^\\\\s]+.*\"), Validators.required])),\n        description: new FormControl(this.task.description),\n        estimate: new FormControl(this.task.estimate)\n      });\n    }\n\n    confirmEdit() {\n      this.task.title = this.editTaskForm.controls['title'].value;\n      this.task.description = this.editTaskForm.controls['description'].value;\n      this.task.estimate = this.editTaskForm.controls['estimate'].value;\n      this.dialogRef.close(true);\n    }\n\n    cancelEdit() {\n      this.dialogRef.close(false);\n    }\n\n    confirmDelete() {\n      const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: \"400px\",\n        data: {\n          title: \"Are you sure?\",\n          message: `You are about to delete task '${this.task.title}'`\n        }\n      }); // listen to response\n\n      dialogRef.afterClosed().subscribe(dialogResult => {\n        if (dialogResult) {\n          this._snackBar.open(\"Deleting Task...\", null, {\n            duration: 30000\n          });\n\n          this.tasksService.deleteTask(this.task.id).subscribe(success => {\n            this._snackBar.open(\"Task Deleted\", null, {\n              duration: 2000\n            });\n          }, error => {\n            this._snackBar.open(\"Error Deleting Task\", null, {\n              duration: 4000\n            });\n          });\n          this.dialogRef.close(false);\n        }\n      });\n    }\n\n  }\n\n  EditTaskDialogComponent.ɵfac = function EditTaskDialogComponent_Factory(t) {\n    return new (t || EditTaskDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.TasksService), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n\n  EditTaskDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditTaskDialogComponent,\n    selectors: [[\"app-edit-task-dialog\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 30,\n    vars: 6,\n    consts: [[3, \"formGroup\"], [\"class\", \"banner-text\", 4, \"ngIf\"], [\"fxLayout\", \"row\"], [\"appearance\", \"fill\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"formControlName\", \"title\"], [\"appearance\", \"fill\", 2, \"min-width\", \"100%\"], [\"formControlName\", \"description\", \"rows\", \"4\", \"matInput\", \"\"], [\"appearance\", \"fill\"], [\"type\", \"number\", \"formControlName\", \"estimate\", \"matInput\", \"\"], [4, \"ngIf\"], [\"mat-dialog-actions\", \"\"], [\"class\", \"delete-button mr-2\", \"mat-button\", \"\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"cancel-button\", \"mr-2\", 3, \"click\"], [1, \"not-if-small\"], [\"mat-button\", \"\", \"type\", \"submit\", 1, \"save-button\", 3, \"disabled\", \"click\"], [1, \"banner-text\"], [1, \"row\"], [1, \"col-xs-12\", \"col-md-6\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"delete-button\", \"mr-2\", 3, \"click\"]],\n    template: function EditTaskDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵtemplate(1, EditTaskDialogComponent_h3_1_Template, 2, 0, \"h3\", 1);\n        i0.ɵɵtemplate(2, EditTaskDialogComponent_h3_2_Template, 2, 0, \"h3\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"mat-form-field\", 3)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Task Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementStart(8, \"mat-error\");\n        i0.ɵɵtext(9, \"Title can't be blank\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"mat-form-field\", 5)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"textarea\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"mat-form-field\", 7)(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Estimate (in hours)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, EditTaskDialogComponent_div_19_Template, 6, 2, \"div\", 9);\n        i0.ɵɵelementStart(20, \"div\", 10);\n        i0.ɵɵtemplate(21, EditTaskDialogComponent_button_21_Template, 4, 0, \"button\", 11);\n        i0.ɵɵelementStart(22, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function EditTaskDialogComponent_Template_button_click_22_listener() {\n          return ctx.cancelEdit();\n        });\n        i0.ɵɵelementStart(23, \"mat-icon\", 13);\n        i0.ɵɵtext(24, \"close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function EditTaskDialogComponent_Template_button_click_26_listener() {\n          return ctx.confirmEdit();\n        });\n        i0.ɵɵelementStart(27, \"mat-icon\", 13);\n        i0.ɵɵtext(28, \"save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(29, \"Save\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.editTaskForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.newTaskMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.newTaskMode);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", ctx.infoMode);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.newTaskMode && ctx.permission(ctx.task.issue, \"delete-task\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.editTaskForm.valid);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.MatIcon, i7.MatButton, i8.MatError, i8.MatFormField, i8.MatLabel, i9.MatInput, i1.MatDialogActions, i4.DatePipe],\n    styles: [\"[_nghost-%COMP%]     .ck-editor__editable_inline{height:12rem;font-family:var(--user-font)}@media (max-width: 500px){.not-if-small[_ngcontent-%COMP%]{display:none}}\"]\n  });\n  return EditTaskDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}