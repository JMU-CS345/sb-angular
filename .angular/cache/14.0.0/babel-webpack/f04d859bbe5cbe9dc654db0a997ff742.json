{"ast":null,"code":"import { DataService } from '../data.service';\nimport { IssuesService } from '../issues.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { callWithSnackBar } from '../util';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditIssueDialogComponent } from '../edit-issue-dialog/edit-issue-dialog.component';\nimport { SprintsService } from '../sprints.service';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"../issues.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"../sprints.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/expansion\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/tooltip\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nimport * as i11 from \"@angular/cdk/drag-drop\";\nimport * as i12 from \"../sprint-frame/sprint-frame.component\";\nimport * as i13 from \"../sprint-issue-state-list/sprint-issue-state-list.component\";\nimport * as i14 from \"../expandable-issue/expandable-issue.component\";\n\nfunction SprintExecutionInnerComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction SprintExecutionInnerComponent_sb_sprint_frame_2_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelement(1, \"sb-expandable-issue\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const issue_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"issue\", issue_r4);\n  }\n}\n\nconst _c0 = function () {\n  return [];\n};\n\nfunction SprintExecutionInnerComponent_sb_sprint_frame_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"sb-sprint-frame\", 2);\n    i0.ɵɵlistener(\"suspend\", function SprintExecutionInnerComponent_sb_sprint_frame_2_Template_sb_sprint_frame_suspend_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSuspendSprint($event));\n    })(\"finish\", function SprintExecutionInnerComponent_sb_sprint_frame_2_Template_sb_sprint_frame_finish_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onFinishSprint($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 3)(2, \"div\", 4)(3, \"div\", 5)(4, \"h4\", 6);\n    i0.ɵɵtext(5, \"Open\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"sb-sprint-issue-state-list\", 7);\n    i0.ɵɵlistener(\"transfer\", function SprintExecutionInnerComponent_sb_sprint_frame_2_Template_sb_sprint_issue_state_list_transfer_6_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.setState($event, \"Open\"));\n    })(\"viewIssue\", function SprintExecutionInnerComponent_sb_sprint_frame_2_Template_sb_sprint_issue_state_list_viewIssue_6_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onViewIssue($event));\n    });\n    i0.ɵɵpipe(7, \"async\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 5)(9, \"h4\", 6);\n    i0.ɵɵtext(10, \"In Progress\");\n    i0.ɵɵelement(11, \"mat-icon\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"sb-sprint-issue-state-list\", 9);\n    i0.ɵɵlistener(\"transfer\", function SprintExecutionInnerComponent_sb_sprint_frame_2_Template_sb_sprint_issue_state_list_transfer_12_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.setState($event, \"In Progress\"));\n    })(\"viewIssue\", function SprintExecutionInnerComponent_sb_sprint_frame_2_Template_sb_sprint_issue_state_list_viewIssue_12_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onViewIssue($event));\n    });\n    i0.ɵɵpipe(13, \"async\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 5)(15, \"h4\", 6);\n    i0.ɵɵtext(16, \"Closed\");\n    i0.ɵɵelement(17, \"mat-icon\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"sb-sprint-issue-state-list\", 11);\n    i0.ɵɵlistener(\"transfer\", function SprintExecutionInnerComponent_sb_sprint_frame_2_Template_sb_sprint_issue_state_list_transfer_18_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.setState($event, \"Closed\"));\n    })(\"viewIssue\", function SprintExecutionInnerComponent_sb_sprint_frame_2_Template_sb_sprint_issue_state_list_viewIssue_18_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onViewIssue($event));\n    });\n    i0.ɵɵpipe(19, \"async\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(20, \"div\", 12)(21, \"mat-accordion\", 13);\n    i0.ɵɵtemplate(22, SprintExecutionInnerComponent_sb_sprint_frame_2_div_22_Template, 2, 1, \"div\", 14);\n    i0.ɵɵpipe(23, \"async\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_6_0;\n    i0.ɵɵproperty(\"sprint\", ctx_r2.sprint)(\"showSuspendButton\", true)(\"showFinishButton\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"issues\", ((tmp_3_0 = i0.ɵɵpipeBind1(7, 7, ctx_r2.issues)) == null ? null : tmp_3_0.issues.list) || i0.ɵɵpureFunction0(15, _c0));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"issues\", ((tmp_4_0 = i0.ɵɵpipeBind1(13, 9, ctx_r2.issues)) == null ? null : tmp_4_0.issues.list) || i0.ɵɵpureFunction0(16, _c0));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"issues\", ((tmp_5_0 = i0.ɵɵpipeBind1(19, 11, ctx_r2.issues)) == null ? null : tmp_5_0.issues.list) || i0.ɵɵpureFunction0(17, _c0));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ((tmp_6_0 = i0.ɵɵpipeBind1(23, 13, ctx_r2.issues)) == null ? null : tmp_6_0.issues.list) || i0.ɵɵpureFunction0(18, _c0));\n  }\n}\n\nexport let SprintExecutionInnerComponent = /*#__PURE__*/(() => {\n  class SprintExecutionInnerComponent {\n    constructor(dataService, issuesService, snackBar, dialog, sprintsService) {\n      this.dataService = dataService;\n      this.issuesService = issuesService;\n      this.snackBar = snackBar;\n      this.dialog = dialog;\n      this.sprintsService = sprintsService;\n    }\n\n    ngOnInit() {}\n\n    set sprint(value) {\n      this.unloadOldIssues();\n      this._sprint = value;\n      this.loadNewIssues();\n    }\n\n    get sprint() {\n      return this._sprint;\n    }\n\n    loadNewIssues() {\n      if (this._sprint) {\n        this.dataService.load(`sprints/${this._sprint.id}/issues`, [`sprints/${this._sprint.id}/issues`, `sprints/${this._sprint.id}/issues/*`]);\n        this.issues = this.dataService.values[`sprints/${this._sprint.id}/issues`];\n      }\n    }\n\n    unloadOldIssues() {\n      if (this._sprint) {\n        this.dataService.unload(`sprints/${this._sprint.id}/issues`, [`sprints/${this._sprint.id}/issues`, `sprints/${this._sprint.id}/issues/*`]);\n        this.issues = null;\n      }\n    }\n\n    ngOnDestroy() {\n      this.unloadOldIssues();\n    }\n\n    setState(issue, state) {\n      console.log(\"setState\");\n      issue.state = state;\n      callWithSnackBar(this.snackBar, this.issuesService.updateState(issue, state), ['Updating state...', 'State updated', 'Error updating state']);\n    }\n\n    onViewIssue(issue) {\n      console.log(`view issue ${issue.id}`);\n      let selectedIssue = JSON.parse(JSON.stringify(issue));\n      const dialogRef = this.dialog.open(EditIssueDialogComponent, {\n        width: '90%',\n        data: {\n          issue: selectedIssue,\n          allowDelete: false\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.saveIssue(selectedIssue);\n        }\n      });\n    }\n\n    saveIssue(issue) {\n      callWithSnackBar(this.snackBar, this.issuesService.save(issue), ['Saving issue...', 'Issue saved', 'Error saving issue']);\n    }\n\n    onSuspendSprint(sprint) {\n      callWithSnackBar(this.snackBar, this.sprintsService.suspendSprint(sprint), ['Suspending sprint...', 'Sprint suspended', 'Error suspending sprint']);\n    }\n\n    onFinishSprint(sprint) {\n      const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: \"400px\",\n        data: {\n          title: \"Are you sure?\",\n          message: `You are about to mark this Sprint complete. This step is irreversible. If there is any work that is incomplete, you may wish to first move it to a future sprint.`\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          callWithSnackBar(this.snackBar, this.sprintsService.finishSprint(sprint), ['Finishing sprint...', 'Sprint finished', 'Error finishing sprint']);\n        }\n      });\n    }\n\n  }\n\n  SprintExecutionInnerComponent.ɵfac = function SprintExecutionInnerComponent_Factory(t) {\n    return new (t || SprintExecutionInnerComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.IssuesService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.SprintsService));\n  };\n\n  SprintExecutionInnerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SprintExecutionInnerComponent,\n    selectors: [[\"sb-sprint-execution-inner\"]],\n    inputs: {\n      sprint: \"sprint\"\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[\"progressSpinner\", \"\"], [3, \"sprint\", \"showSuspendButton\", \"showFinishButton\", \"suspend\", \"finish\", 4, \"ngIf\", \"ngIfElse\"], [3, \"sprint\", \"showSuspendButton\", \"showFinishButton\", \"suspend\", \"finish\"], [1, \"large-only\", \"mt-3\"], [\"cdkDropListGroup\", \"\", 1, \"row\"], [1, \"col-4\", \"issue-status-column\"], [1, \"menu-text\"], [\"state\", \"Open\", 3, \"issues\", \"transfer\", \"viewIssue\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-running\", \"matTooltip\", \"In Progress\", 1, \"sb-icon\", \"ml-2\"], [\"state\", \"In Progress\", 3, \"issues\", \"transfer\", \"viewIssue\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-check\", \"matTooltip\", \"Closed\", 1, \"sb-icon\", \"ml-2\"], [\"state\", \"Closed\", 3, \"issues\", \"transfer\", \"viewIssue\"], [\"cdkDropListGroup\", \"\", 1, \"small-only\"], [1, \"row\"], [\"class\", \"small-issue-entry col-xs-12 col-sm-6 col-md-4 col-lg-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"small-issue-entry\", \"col-xs-12\", \"col-sm-6\", \"col-md-4\", \"col-lg-3\"], [3, \"issue\"]],\n    template: function SprintExecutionInnerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SprintExecutionInnerComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, SprintExecutionInnerComponent_sb_sprint_frame_2_Template, 24, 19, \"sb-sprint-frame\", 1);\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.sprint)(\"ngIfElse\", _r0);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i7.MatAccordion, i8.MatIcon, i9.MatTooltip, i10.MatSpinner, i11.CdkDropListGroup, i12.SprintFrameComponent, i13.SprintIssueStateListComponent, i14.ExpandableIssueComponent, i6.AsyncPipe]\n  });\n  return SprintExecutionInnerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}