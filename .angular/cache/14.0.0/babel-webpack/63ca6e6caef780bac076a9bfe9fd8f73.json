{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { Base } from '../base';\nimport { EditCoordinator } from '../tasks/tasks.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditTaskDialogComponent } from '../edit-task-dialog/edit-task-dialog.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { callWithSnackBar } from '../util';\nimport { TasksService } from '../tasks.service';\nimport { DataService } from '../data.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"../tasks.service\";\nimport * as i4 from \"../data.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/tooltip\";\nimport * as i9 from \"@angular/material/progress-spinner\";\nimport * as i10 from \"../user-selector/user-selector.component\";\nconst _c0 = [\"estimateEditor\"];\n\nfunction TaskCardComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 2);\n  }\n}\n\nfunction TaskCardComponent_div_2_mat_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 19);\n  }\n}\n\nfunction TaskCardComponent_div_2_mat_icon_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 20);\n  }\n}\n\nfunction TaskCardComponent_div_2_a_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function TaskCardComponent_div_2_a_9_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.startEditingEstimate());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"hidden\", ctx_r5.isEditingEstimate())(\"disabled\", !ctx_r5.permission(ctx_r5.task, \"update\") ? true : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.task.estimate, \" hours\");\n  }\n}\n\nfunction TaskCardComponent_div_2_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.task.estimate, \" hours\");\n  }\n}\n\nfunction TaskCardComponent_div_2_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"sb-user-selector\", 22);\n    i0.ɵɵlistener(\"userSelected\", function TaskCardComponent_div_2_div_20_Template_sb_user_selector_userSelected_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.assignTask($event));\n    });\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"team\", (tmp_0_0 = i0.ɵɵpipeBind1(2, 3, ctx_r8.team)) == null ? null : tmp_0_0.team)(\"assignee\", ctx_r8.task.assignee)(\"disabled\", !ctx_r8.permission(ctx_r8.task, \"update\") || !ctx_r8.editable);\n  }\n}\n\nfunction TaskCardComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"span\", 5);\n    i0.ɵɵtemplate(3, TaskCardComponent_div_2_mat_icon_3_Template, 1, 0, \"mat-icon\", 6);\n    i0.ɵɵtemplate(4, TaskCardComponent_div_2_mat_icon_4_Template, 1, 0, \"mat-icon\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function TaskCardComponent_div_2_Template_a_click_6_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.editTask(ctx_r13.task, $event));\n    });\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 9);\n    i0.ɵɵtemplate(9, TaskCardComponent_div_2_a_9_Template, 2, 3, \"a\", 10);\n    i0.ɵɵtemplate(10, TaskCardComponent_div_2_span_10_Template, 2, 1, \"span\", 11);\n    i0.ɵɵelementStart(11, \"input\", 12, 13);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskCardComponent_div_2_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.estimate = $event);\n    })(\"blur\", function TaskCardComponent_div_2_Template_input_blur_11_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.stopEditingEstimate(false));\n    })(\"keydown\", function TaskCardComponent_div_2_Template_input_keydown_11_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.processKeyPress($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 14);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 15);\n    i0.ɵɵelement(16, \"mat-icon\", 16);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 17)(19, \"span\", 18);\n    i0.ɵɵtemplate(20, TaskCardComponent_div_2_div_20_Template, 3, 5, \"div\", 11);\n    i0.ɵɵpipe(21, \"async\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.task.state != \"complete\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.task.state == \"complete\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" #\", ctx_r2.task.id, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r2.permission(ctx_r2.task, \"update\") ? true : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.task.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.permission(ctx_r2.task, \"update\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.permission(ctx_r2.task, \"update\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r2.isEditingEstimate())(\"ngModel\", ctx_r2.estimate);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.task.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"State: \", ctx_r2.task.state || \"Open\", \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(21, 13, ctx_r2.team));\n  }\n}\n\nexport let TaskCardComponent = /*#__PURE__*/(() => {\n  class TaskCardComponent extends Base {\n    constructor(dialog, snackBar, tasksService, dataService) {\n      super();\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.tasksService = tasksService;\n      this.dataService = dataService;\n      this.editable = true;\n    }\n\n    ngOnInit() {\n      this.dataService.load(`projects/${this.task.issue.project.id}/team`, []);\n      this.team = this.dataService.values[`projects/${this.task.issue.project.id}/team`];\n    }\n\n    ngOnDestroy() {\n      this.dataService.unload(`projects/${this.task.issue.project.id}/team`, []);\n    }\n\n    assignTask(user) {\n      callWithSnackBar(this.snackBar, this.tasksService.assignTask(this.task.id, user === null || user === void 0 ? void 0 : user.id), [\"Assigning task...\", \"Assigned task\", \"Error assigning task\"]);\n    }\n\n    editTask(task, event) {\n      event.stopPropagation();\n      if (!this.editable) return;\n      this.taskUnderEdit = JSON.parse(JSON.stringify(task));\n      const dialogRef = this.dialog.open(EditTaskDialogComponent, {\n        width: '90%',\n        data: this.taskUnderEdit\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.save(this.taskUnderEdit);\n        }\n      });\n    }\n\n    save(t) {\n      callWithSnackBar(this.snackBar, this.tasksService.save(t), ['Saving task...', 'Task saved', 'Error saving task']);\n    } // isEditingEstimate(task) {\n    //   return this.editingEstimate[String(task.id)];\n    // }\n\n\n    startEditingEstimate() {\n      if (!this.editCoordinator) return;\n      this.editCoordinator.objectUnderEdit = `estimate-${this.task.id}`;\n      this.estimate = this.task.estimate;\n      this.originalEstimate = this.task.estimate;\n      setTimeout(() => {\n        this.estimateEditor.nativeElement.focus();\n      }, 0);\n    }\n\n    isEditingEstimate() {\n      if (!this.editCoordinator) return;\n      return this.editCoordinator.objectUnderEdit == `estimate-${this.task.id}`;\n    }\n\n    processKeyPress(event) {\n      console.log(\"processKeyPress\");\n      let keyCode = event.keyCode;\n\n      if (keyCode == 27 || keyCode == 13 || keyCode == 9) {\n        this.stopEditingEstimate(keyCode != 9);\n      }\n    }\n\n    stopEditingEstimate(saveEdit) {\n      if (!this.editCoordinator) return;\n      this.editCoordinator.objectUnderEdit = null;\n\n      if (saveEdit) {\n        this.task.estimate = Number(this.estimate);\n        this.save(this.task);\n      }\n    }\n\n  }\n\n  TaskCardComponent.ɵfac = function TaskCardComponent_Factory(t) {\n    return new (t || TaskCardComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.TasksService), i0.ɵɵdirectiveInject(i4.DataService));\n  };\n\n  TaskCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskCardComponent,\n    selectors: [[\"sb-task-card\"]],\n    viewQuery: function TaskCardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.estimateEditor = _t.first);\n      }\n    },\n    inputs: {\n      task: \"task\",\n      editCoordinator: \"editCoordinator\",\n      editable: \"editable\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[\"progressSpinner\", \"\"], [\"class\", \"pr-3\", 4, \"ngIf\", \"ngIfElse\"], [\"diameter\", \"32\", 2, \"min-height\", \"32px\", \"position\", \"relative\", \"left\", \"16px\"], [1, \"pr-3\"], [1, \"mt-2\", \"ml-1\", \"row\"], [1, \"col-2\", \"banner-text\"], [\"fontIcon\", \"fa-hammer\", \"fontSet\", \"fas\", 4, \"ngIf\"], [\"fontIcon\", \"fa-check\", \"fontSet\", \"fas\", 4, \"ngIf\"], [\"matTooltip\", \"Edit Task\", 1, \"col-7\", \"task-link\", \"text-wrap\", \"banner-text\", 3, \"click\"], [1, \"col-3\", \"user-text\"], [\"class\", \"task-link estimate-link\", \"matTooltip\", \"Edit Estimate\", 3, \"hidden\", \"disabled\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"text\", 3, \"hidden\", \"ngModel\", \"ngModelChange\", \"blur\", \"keydown\"], [\"estimateEditor\", \"\"], [1, \"mt-1\", \"ml-3\", \"text-wrap\", \"base-text\"], [1, \"mt-2\", \"ml-3\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-clipboard-list\"], [1, \"ml-1\", \"row\"], [1, \"col-11\"], [\"fontIcon\", \"fa-hammer\", \"fontSet\", \"fas\"], [\"fontIcon\", \"fa-check\", \"fontSet\", \"fas\"], [\"matTooltip\", \"Edit Estimate\", 1, \"task-link\", \"estimate-link\", 3, \"hidden\", \"disabled\", \"click\"], [3, \"team\", \"assignee\", \"disabled\", \"userSelected\"]],\n    template: function TaskCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TaskCardComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, TaskCardComponent_div_2_Template, 22, 15, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.task)(\"ngIfElse\", _r0);\n      }\n    },\n    dependencies: [i5.NgIf, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel, i7.MatIcon, i8.MatTooltip, i9.MatSpinner, i10.UserSelectorComponent, i5.AsyncPipe],\n    styles: [\".task-link[_ngcontent-%COMP%]{color:var(--link)}.task-link[_ngcontent-%COMP%]:hover{text-decoration:none;color:var(--link-hover)}.task-link[_ngcontent-%COMP%]:active{color:var(--link-active)}.estimate-link[_ngcontent-%COMP%]{text-decoration:underline}\"]\n  });\n  return TaskCardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}