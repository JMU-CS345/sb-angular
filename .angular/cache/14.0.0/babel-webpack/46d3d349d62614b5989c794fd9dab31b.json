{"ast":null,"code":"import { DataService } from '../data.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"ngx-echarts\";\nexport let BurndownComponent = /*#__PURE__*/(() => {\n  class BurndownComponent {\n    constructor(dataService) {\n      this.dataService = dataService;\n    }\n\n    ngOnInit() {\n      this.updateSprint();\n    }\n\n    updateSprint() {\n      if (this.sprintId) {\n        this.dataService.load(`sprints/${this.sprintId}`, [`sprints/${this.sprintId}`]);\n        this.sprint$ = this.dataService.values[`sprints/${this.sprintId}`];\n        this.sub = this.sprint$.subscribe(x => this.setBurndownData(x));\n      }\n    }\n\n    ngOnDestroy() {\n      this.disposeSprint();\n    }\n\n    disposeSprint() {\n      if (this.sub) {\n        this.sub.unsubscribe();\n        this.dataService.unload(`sprints/${this.sprintId}`, [`sprints/${this.sprintId}`]);\n      }\n    }\n\n    setBurndownData(sprint) {\n      if (!(sprint === null || sprint === void 0 ? void 0 : sprint.burndownData)) {\n        return;\n      }\n\n      this.options = {\n        legend: {\n          data: ['ideal', 'actual'],\n          align: 'left'\n        },\n        tooltip: {},\n        xAxis: {\n          data: sprint.burndownData.xAxisData,\n          silent: false,\n          splitLine: {\n            show: true\n          },\n          name: 'date',\n          boundaryGap: false\n        },\n        yAxis: {\n          name: 'points'\n        },\n        series: [{\n          name: 'ideal',\n          type: 'line',\n          data: sprint.burndownData.ideal\n        }, {\n          name: 'projected',\n          type: 'line',\n          data: sprint.burndownData.projected,\n          lineStyle: {\n            type: 'dashed'\n          }\n        }, {\n          name: 'actual',\n          type: 'line',\n          data: sprint.burndownData.actual\n        }]\n      };\n    }\n\n    set sprintId(value) {\n      this.disposeSprint();\n      this._sprintId = value;\n      this.updateSprint();\n    }\n\n    get sprintId() {\n      return this._sprintId;\n    }\n\n  }\n\n  BurndownComponent.ɵfac = function BurndownComponent_Factory(t) {\n    return new (t || BurndownComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n\n  BurndownComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BurndownComponent,\n    selectors: [[\"app-burndown\"]],\n    inputs: {\n      sprintId: \"sprintId\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"echarts\", \"\", 1, \"demo-chart\", 3, \"options\"]],\n    template: function BurndownComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"options\", ctx.options);\n      }\n    },\n    dependencies: [i2.NgxEchartsDirective],\n    styles: [\".demo-chart[_ngcontent-%COMP%]{background-color:#fff}\"]\n  });\n  return BurndownComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}