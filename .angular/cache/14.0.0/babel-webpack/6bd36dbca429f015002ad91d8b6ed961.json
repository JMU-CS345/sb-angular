{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Color } from '../color';\nimport { IssuesService } from '../issues.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { callWithSnackBar } from '../util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../issues.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/tooltip\";\nimport * as i7 from \"@angular/material/progress-spinner\";\nimport * as i8 from \"@angular/material/checkbox\";\n\nfunction IssueSelectionComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction IssueSelectionComponent_div_2_div_8_mat_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 10);\n    i0.ɵɵtext(1, \"directions_run\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const issue_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"matTooltip\", \"In sprint '\" + issue_r4.sprint.title + \"' (\" + ctx_r5.status(issue_r4.sprint) + \")\");\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"background-color\": a0,\n    \"color\": a1\n  };\n};\n\nfunction IssueSelectionComponent_div_2_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"mat-checkbox\", 8);\n    i0.ɵɵlistener(\"click\", function IssueSelectionComponent_div_2_div_8_Template_mat_checkbox_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const issue_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.toggleInSprint(issue_r4));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, IssueSelectionComponent_div_2_div_8_mat_icon_3_Template, 2, 1, \"mat-icon\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const issue_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(5, _c0, issue_r4.epic && issue_r4.epic.color ? issue_r4.epic.color : \"#FFFFFF\", ctx_r3.fontColor(issue_r4.epic ? issue_r4.epic.color : \"#FFFFFF\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", issue_r4.sprint && issue_r4.sprint.id == ctx_r3.sprint.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"#\", issue_r4.id, \" - \", issue_r4.title, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", issue_r4.sprint && issue_r4.sprint.id != ctx_r3.sprint.id);\n  }\n}\n\nfunction IssueSelectionComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function IssueSelectionComponent_div_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.okay());\n    });\n    i0.ɵɵtext(3, \"Done\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5, \"Select Issues for \");\n    i0.ɵɵelementStart(6, \"span\", 4);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, IssueSelectionComponent_div_2_div_8_Template, 4, 8, \"div\", 5);\n    i0.ɵɵelementStart(9, \"div\", 2)(10, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function IssueSelectionComponent_div_2_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.okay());\n    });\n    i0.ɵɵtext(11, \"Done\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.sprint.title, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.issues);\n  }\n}\n\nexport let IssueSelectionComponent = /*#__PURE__*/(() => {\n  class IssueSelectionComponent {\n    constructor(issuesService, snackBar) {\n      this.issuesService = issuesService;\n      this.snackBar = snackBar;\n      this.close = new EventEmitter();\n      this.inSprint = {};\n    }\n\n    ngOnInit() {}\n\n    set issues(value) {\n      var _a;\n\n      console.log(`issue-selection issues updated`);\n      let orderedIssues = [];\n      let sprintIssues = [];\n\n      for (let issue of value) {\n        if (((_a = issue.sprint) === null || _a === void 0 ? void 0 : _a.id) == this.sprint.id) {\n          sprintIssues.push(issue);\n          this.inSprint[issue.id] = true;\n        } else {\n          orderedIssues.push(issue);\n          this.inSprint[issue.id] = false;\n        }\n      }\n\n      this._issues = sprintIssues.concat(orderedIssues);\n    }\n\n    get issues() {\n      return this._issues;\n    }\n\n    okay() {\n      // for (let issue of this.issues) {\n      // \tif (issue.sprint?.id == this.sprint.id && !this.inSprint[issue.id]) {\n      // \t\t// {sprintId1: fromSprint.id, projectId1: fromProject.id, \n      //   // \t\t\t\t sprintId2: toSprint.id, projectId2: toProject.id, fromIndex: transferData.fromIndex, toIndex: transferData.toIndex}\n      // \t\t// this.issuesService.transfer({sprintId1: this.sprint.id, projectId1: this.sprint.project.id, \n      // \t\t// \t\t\t\t\t\t\t sprintId2: null, projectId2: this.sprint.project.id, })\n      // \t\tthis.issuesService.moveToBacklog(issue.id);\n      // \t} else if (issue.sprint?.id != this.sprint.id && this.inSprint[issue.id]) {\n      // \t\tthis.issuesService.moveToSprint(issue.id, this.sprint.id);\n      // \t}\n      // }\n      this.close.emit();\n    }\n\n    cancel() {\n      this.close.emit();\n    }\n\n    fontColor(bgColor) {\n      return Color.fontColor(bgColor);\n    }\n\n    toggleInSprint(issue) {\n      this.inSprint[issue.id] = !this.inSprint[issue.id];\n\n      if (this.inSprint[issue.id]) {\n        callWithSnackBar(this.snackBar, this.issuesService.moveToSprint(issue.id, this.sprint.id), [\"Adding to sprint...\", \"Added to sprint\", \"Error adding to sprint\"]);\n      } else {\n        callWithSnackBar(this.snackBar, this.issuesService.moveToBacklog(issue.id), [\"Removing from sprint...\", \"Removed from sprint\", \"Error removing from sprint\"]);\n      }\n    }\n\n    status(sprint) {\n      var _a;\n\n      return sprint.id == ((_a = sprint.project) === null || _a === void 0 ? void 0 : _a.current_sprint_id) ? \"Active\" : sprint.started ? sprint.completed ? \"Completed\" : \"Suspended\" : \"Pending\";\n    }\n\n  }\n\n  IssueSelectionComponent.ɵfac = function IssueSelectionComponent_Factory(t) {\n    return new (t || IssueSelectionComponent)(i0.ɵɵdirectiveInject(i1.IssuesService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  IssueSelectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IssueSelectionComponent,\n    selectors: [[\"sb-issue-selection\"]],\n    inputs: {\n      sprint: \"sprint\",\n      issues: \"issues\"\n    },\n    outputs: {\n      close: \"close\"\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[\"progressSpinner\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"col-12\", \"text-right\", \"p-0\"], [\"mat-button\", \"\", 1, \"save-button\", \"icon-button\", \"mb-2\", \"mt-2\", 3, \"click\"], [1, \"banner-text\", \"sprint-title\"], [\"class\", \"issue-card text-truncate pl-2 row\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", 1, \"save-button\", \"icon-button\", \"mt-2\", 3, \"click\"], [1, \"issue-card\", \"text-truncate\", \"pl-2\", \"row\", 3, \"ngStyle\"], [1, \"col-10\", 3, \"checked\", \"click\"], [\"class\", \"col-2\", 3, \"matTooltip\", 4, \"ngIf\"], [1, \"col-2\", 3, \"matTooltip\"]],\n    template: function IssueSelectionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, IssueSelectionComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, IssueSelectionComponent_div_2_Template, 12, 2, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.issues)(\"ngIfElse\", _r0);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i3.NgStyle, i4.MatIcon, i5.MatButton, i6.MatTooltip, i7.MatSpinner, i8.MatCheckbox],\n    styles: [\".issue-card[_ngcontent-%COMP%]{padding-top:4px}.sprint-title[_ngcontent-%COMP%]{font-style:italic}\"]\n  });\n  return IssueSelectionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}