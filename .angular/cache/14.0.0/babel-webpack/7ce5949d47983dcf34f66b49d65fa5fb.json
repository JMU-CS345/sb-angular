{"ast":null,"code":"import { DataService } from '../data.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"../sprint-retrospective-report-inner/sprint-retrospective-report-inner.component\";\nimport * as i3 from \"@angular/common\";\nexport let SprintRetrospectiveReportComponent = /*#__PURE__*/(() => {\n  class SprintRetrospectiveReportComponent {\n    constructor(dataService) {\n      this.dataService = dataService;\n    }\n\n    ngOnInit() {}\n\n    load() {\n      this.dataService.load(`sprints/${this.sprintId}/retrospective_report`, [`sprints/${this.sprintId}`, `sprints/${this.sprintId}/issues`, `sprints/${this.sprintId}/issues/*`]);\n      this.report = this.dataService.values[`sprints/${this.sprintId}/retrospective_report`];\n    }\n\n    unload() {\n      this.dataService.unload(`sprints/${this.sprintId}/retrospective_report`, [`sprints/${this.sprintId}`, `sprints/${this.sprintId}/issues`, `sprints/${this.sprintId}/issues/*`]);\n    }\n\n    set sprintId(value) {\n      if (this._sprintId) {\n        this.unload();\n      }\n\n      this._sprintId = value;\n\n      if (this._sprintId) {\n        this.load();\n      }\n    }\n\n    get sprintId() {\n      return this._sprintId;\n    }\n\n  }\n\n  SprintRetrospectiveReportComponent.ɵfac = function SprintRetrospectiveReportComponent_Factory(t) {\n    return new (t || SprintRetrospectiveReportComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n\n  SprintRetrospectiveReportComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SprintRetrospectiveReportComponent,\n    selectors: [[\"sb-sprint-retrospective-report\"]],\n    inputs: {\n      sprintId: \"sprintId\"\n    },\n    decls: 2,\n    vars: 4,\n    consts: [[3, \"report\", \"sprintId\"]],\n    template: function SprintRetrospectiveReportComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"sb-sprint-retrospective-report-inner\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        let tmp_0_0;\n        i0.ɵɵproperty(\"report\", (tmp_0_0 = i0.ɵɵpipeBind1(1, 2, ctx.report)) == null ? null : tmp_0_0.report)(\"sprintId\", ctx.sprintId);\n      }\n    },\n    dependencies: [i2.SprintRetrospectiveReportInnerComponent, i3.AsyncPipe]\n  });\n  return SprintRetrospectiveReportComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}