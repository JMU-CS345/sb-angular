{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Base } from '../base';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"../color-picker-form-control/color-picker-form-control.component\";\n\nfunction EpicFormComponent_div_0_button_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function EpicFormComponent_div_0_button_32_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.confirmDelete());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EpicFormComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function EpicFormComponent_div_0_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.submit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 2)(3, \"mat-form-field\", 3)(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Epic Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 4);\n    i0.ɵɵelementStart(7, \"mat-error\");\n    i0.ɵɵtext(8, \"Title can't be blank\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 2)(10, \"mat-form-field\", 3)(11, \"mat-label\");\n    i0.ɵɵtext(12, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"textarea\", 5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 2)(15, \"mat-form-field\", 6)(16, \"mat-label\");\n    i0.ɵɵtext(17, \"Size\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"mat-select\", 7)(19, \"mat-option\", 8);\n    i0.ɵɵtext(20, \"XL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"mat-option\", 9);\n    i0.ɵɵtext(22, \"L\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"mat-option\", 10);\n    i0.ɵɵtext(24, \"M\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"mat-option\", 11);\n    i0.ɵɵtext(26, \"S\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"mat-form-field\")(28, \"mat-label\");\n    i0.ɵɵtext(29, \"Color\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"sb-color-picker\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 13);\n    i0.ɵɵtemplate(32, EpicFormComponent_div_0_button_32_Template, 4, 0, \"button\", 14);\n    i0.ɵɵelementStart(33, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function EpicFormComponent_div_0_Template_button_click_33_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.cancelEdit.emit());\n    });\n    i0.ɵɵelementStart(34, \"mat-icon\");\n    i0.ɵɵtext(35, \"close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"button\", 16)(38, \"mat-icon\");\n    i0.ɵɵtext(39, \"save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(40, \"Save\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.epicForm);\n    i0.ɵɵadvance(31);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.mode == \"edit\" && ctx_r0.permission(ctx_r0.epic.project, \"delete-epic\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.epicForm.valid);\n  }\n}\n\nexport let EpicFormComponent = /*#__PURE__*/(() => {\n  class EpicFormComponent extends Base {\n    constructor(dialog, _snackBar) {\n      super();\n      this.dialog = dialog;\n      this._snackBar = _snackBar;\n      this.fb = new FormBuilder();\n      this.cancelEdit = new EventEmitter();\n      this.confirmEdit = new EventEmitter();\n      this.deleteEpic = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    init() {\n      this.epicForm = this.fb.group({\n        title: new FormControl(this.epic.title, Validators.compose([Validators.pattern(\".*[^\\\\s]+.*\"), Validators.required])),\n        description: new FormControl(this.epic.description),\n        size: new FormControl(String(this.epic.size)),\n        color: new FormControl(this.epic.color)\n      });\n    }\n\n    set epic(value) {\n      this._epic = value;\n\n      if (value) {\n        this.init();\n      }\n    }\n\n    get epic() {\n      return this._epic;\n    }\n\n    confirmDelete() {\n      const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: \"400px\",\n        data: {\n          title: \"Are you sure?\",\n          message: `You are about to delete epic '${this.epic.title}'`\n        }\n      });\n      dialogRef.afterClosed().subscribe(dialogResult => {\n        if (dialogResult) {\n          this.deleteEpic.emit(this.epic);\n        }\n      });\n    }\n\n    submit() {\n      let editedEpic = {\n        id: this.epic.id,\n        title: this.epicForm.value['title'],\n        description: this.epicForm.value['description'],\n        size: this.epicForm.value['size'],\n        color: this.epicForm.value['color'],\n        project: this.epic.project\n      };\n      this.confirmEdit.emit(editedEpic);\n    }\n\n  }\n\n  EpicFormComponent.ɵfac = function EpicFormComponent_Factory(t) {\n    return new (t || EpicFormComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  EpicFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EpicFormComponent,\n    selectors: [[\"sb-epic-form\"]],\n    inputs: {\n      mode: \"mode\",\n      epic: \"epic\"\n    },\n    outputs: {\n      cancelEdit: \"cancelEdit\",\n      confirmEdit: \"confirmEdit\",\n      deleteEpic: \"deleteEpic\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"epic-form\", \"menu-text\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [\"appearance\", \"fill\", 1, \"col-12\"], [\"matInput\", \"\", \"formControlName\", \"title\", 1, \"user-text\"], [\"formControlName\", \"description\", \"rows\", \"4\", \"matInput\", \"\"], [\"appearance\", \"fill\", 1, \"col-6\", \"base-text\"], [\"formControlName\", \"size\", \"matInput\", \"\", 1, \"user-text\"], [\"value\", \"4\", 1, \"user-text\"], [\"value\", \"3\", 1, \"user-text\"], [\"value\", \"2\", 1, \"user-text\"], [\"value\", \"1\", 1, \"user-text\"], [\"formControlName\", \"color\", \"matInput\", \"\", 1, \"menu-text\"], [\"mat-dialog-actions\", \"\", 1, \"mb-2\"], [\"mat-button\", \"\", \"type\", \"button\", \"class\", \"delete-button mr-2\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"cancel-button\", \"mr-2\", 3, \"click\"], [\"mat-button\", \"\", \"type\", \"submit\", 1, \"save-button\", 3, \"disabled\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"delete-button\", \"mr-2\", 3, \"click\"]],\n    template: function EpicFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EpicFormComponent_div_0_Template, 41, 3, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.epic);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.MatIcon, i6.MatButton, i7.MatError, i7.MatFormField, i7.MatLabel, i8.MatInput, i1.MatDialogActions, i9.MatSelect, i10.MatOption, i11.ColorPickerFormControlComponent],\n    styles: [\"[_nghost-%COMP%]     .ck-editor__editable_inline{height:12rem;font-family:var(--user-font)}\"]\n  });\n  return EpicFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}