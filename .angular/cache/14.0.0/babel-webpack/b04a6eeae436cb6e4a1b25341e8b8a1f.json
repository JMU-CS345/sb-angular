{"ast":null,"code":"import { Api } from './api';\nimport { ReplaySubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { CableService } from './cable.service';\nimport { AuthService } from '@auth0/auth0-angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./cable.service\";\nimport * as i4 from \"@auth0/auth0-angular\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(api, router, cableService, auth) {\n      this.api = api;\n      this.router = router;\n      this.cableService = cableService;\n      this.auth = auth;\n      this.status = new ReplaySubject(1);\n      this.lastValue = null;\n      this.status.next('pending');\n      this.auth.user$.subscribe(value => {\n        if (value == this.lastValue) return;\n\n        if (value) {\n          this.status.next('logged_in');\n        } else {\n          this.status.next('logged_out');\n        }\n\n        this.lastValue = value;\n      });\n    }\n\n    login() {\n      // window.location.href = `${environment.apiBaseUrl}/users/sign_in`;\n      this.auth.loginWithRedirect();\n    }\n\n    logout() {\n      this.auth.logout({\n        returnTo: document.location.origin\n      });\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.Api), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.CableService), i0.ɵɵinject(i4.AuthService));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}