{"ast":null,"code":"import { ElementRef, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { callWithSnackBar } from '../util';\nimport { IssuesService } from '../issues.service';\nimport { Base } from '../base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"../issues.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/tooltip\";\nimport * as i8 from \"@angular/material/checkbox\";\nconst _c0 = [\"criterionEditor\"];\n\nfunction AcceptanceCriterionEntryComponent_mat_checkbox_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-checkbox\", 5);\n    i0.ɵɵlistener(\"click\", function AcceptanceCriterionEntryComponent_mat_checkbox_1_Template_mat_checkbox_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toggleCompleted(ctx_r3.criterion));\n    })(\"ngModelChange\", function AcceptanceCriterionEntryComponent_mat_checkbox_1_Template_mat_checkbox_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.criterion.completed = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.criterion.completed);\n  }\n}\n\nfunction AcceptanceCriterionEntryComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function AcceptanceCriterionEntryComponent_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteAC.emit(ctx_r6.criterion));\n    });\n    i0.ɵɵelement(1, \"mat-icon\", 7);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"col-9\": a0,\n    \"col-10\": a1\n  };\n};\n\nexport let AcceptanceCriterionEntryComponent = /*#__PURE__*/(() => {\n  class AcceptanceCriterionEntryComponent extends Base {\n    constructor(snackBar, issuesService) {\n      super();\n      this.snackBar = snackBar;\n      this.issuesService = issuesService;\n      this.editable = true;\n      this.deleteAC = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    toggleCompleted(criterion) {\n      // criterion.completed = !criterion.completed;\n      callWithSnackBar(this.snackBar, this.issuesService.setACCompleted(this.issue.id, criterion.id, !criterion.completed), [\"Updating acceptance criterion...\", \"Acceptance criterion updated\", \"Error updating acceptance criterion\"]);\n    }\n\n    startEditing(criterion) {\n      this.originalCriterion = criterion.criterion;\n    }\n\n    saveCriterion(criterion) {\n      if (criterion.criterion != this.originalCriterion) {\n        callWithSnackBar(this.snackBar, this.issuesService.updateAcceptanceCriterion(this.issue.id, criterion.id, criterion.criterion), [\"Updating acceptance criterion...\", \"Acceptance criterion updated\", \"Error updating acceptance criterion\"]);\n      }\n    }\n\n    onCriterionKeyDown(event, criterion) {\n      let chrCode;\n      if (event.charCode) chrCode = event.charCode;else if (event.which) chrCode = event.which;else if (event.keyCode) chrCode = event.keyCode;\n\n      if (chrCode == 13 && !event.shiftKey) {\n        this.saveCriterion(criterion);\n        event.preventDefault();\n        this.editor.nativeElement.blur();\n        return;\n      } else if (chrCode == 27) {\n        event.preventDefault();\n        criterion.criterion = this.originalCriterion;\n        this.editor.nativeElement.blur();\n        return;\n      }\n    }\n\n  }\n\n  AcceptanceCriterionEntryComponent.ɵfac = function AcceptanceCriterionEntryComponent_Factory(t) {\n    return new (t || AcceptanceCriterionEntryComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBar), i0.ɵɵdirectiveInject(i2.IssuesService));\n  };\n\n  AcceptanceCriterionEntryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AcceptanceCriterionEntryComponent,\n    selectors: [[\"sb-acceptance-criterion-entry\"]],\n    viewQuery: function AcceptanceCriterionEntryComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editor = _t.first);\n      }\n    },\n    inputs: {\n      criterion: \"criterion\",\n      issue: \"issue\",\n      showCompletionCheckboxes: \"showCompletionCheckboxes\",\n      editable: \"editable\"\n    },\n    outputs: {\n      deleteAC: \"deleteAC\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 5,\n    vars: 8,\n    consts: [[1, \"row\", \"acceptance-criteria-row\"], [\"class\", \"col-1 pt-2 ac-checkbox\", \"color\", \"primary\", 3, \"ngModel\", \"click\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"col-1\", \"mat-icon-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Delete Acceptance Criterion\", 3, \"click\", 4, \"ngIf\"], [1, \"user-text\", \"acceptance-criteria-textarea\", 3, \"ngClass\", \"readonly\", \"ngModel\", \"keydown\", \"focus\", \"blur\", \"ngModelChange\"], [\"criterionEditor\", \"\"], [\"color\", \"primary\", 1, \"col-1\", \"pt-2\", \"ac-checkbox\", 3, \"ngModel\", \"click\", \"ngModelChange\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Delete Acceptance Criterion\", 1, \"col-1\", 3, \"click\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-times-circle\", 1, \"sb-icon\"]],\n    template: function AcceptanceCriterionEntryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, AcceptanceCriterionEntryComponent_mat_checkbox_1_Template, 1, 1, \"mat-checkbox\", 1);\n        i0.ɵɵtemplate(2, AcceptanceCriterionEntryComponent_button_2_Template, 2, 0, \"button\", 2);\n        i0.ɵɵelementStart(3, \"textarea\", 3, 4);\n        i0.ɵɵlistener(\"keydown\", function AcceptanceCriterionEntryComponent_Template_textarea_keydown_3_listener($event) {\n          return ctx.onCriterionKeyDown($event, ctx.criterion);\n        })(\"focus\", function AcceptanceCriterionEntryComponent_Template_textarea_focus_3_listener() {\n          return ctx.startEditing(ctx.criterion);\n        })(\"blur\", function AcceptanceCriterionEntryComponent_Template_textarea_blur_3_listener() {\n          return ctx.saveCriterion(ctx.criterion);\n        })(\"ngModelChange\", function AcceptanceCriterionEntryComponent_Template_textarea_ngModelChange_3_listener($event) {\n          return ctx.criterion.criterion = $event;\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showCompletionCheckboxes && ctx.permission(ctx.issue, \"accept_ac\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.permission(ctx.issue, \"update\") && ctx.editable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c1, ctx.showCompletionCheckboxes, !ctx.showCompletionCheckboxes))(\"readonly\", !ctx.editable)(\"ngModel\", ctx.criterion.criterion);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.MatIcon, i6.MatButton, i7.MatTooltip, i8.MatCheckbox],\n    styles: [\".acceptance-criteria-textarea[_ngcontent-%COMP%]{background-color:var(--background);border-color:var(--on-background);color:var(--on-background)}.acceptance-criteria-row[_ngcontent-%COMP%]{align-items:center}.ac-checkbox[_ngcontent-%COMP%]{padding-left:9px}\"]\n  });\n  return AcceptanceCriterionEntryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}