{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CdkDragDrop } from \"@angular/cdk/drag-drop\";\nimport { Color } from '../color';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/expansion\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/progress-spinner\";\nimport * as i6 from \"../expandable-issue/expandable-issue.component\";\n\nfunction ExpandableIssueListComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"mat-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ExpandableIssueListComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"sb-expandable-issue\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const issue_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"issue\", issue_r5);\n  }\n}\n\nfunction ExpandableIssueListComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-accordion\");\n    i0.ɵɵtemplate(2, ExpandableIssueListComponent_div_5_div_2_Template, 2, 1, \"div\", 7);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx_r2.filteredIssues));\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"color\": a0\n  };\n};\n\nfunction ExpandableIssueListComponent_div_6_div_1_div_1_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ExpandableIssueListComponent_div_6_div_1_div_1_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const issue_r9 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r12.removeIssue(issue_r9));\n    });\n    i0.ɵɵelement(1, \"mat-icon\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const issue_r9 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(1, _c0, ctx_r11.fontColor(issue_r9.epic ? issue_r9.epic.color : \"#FFFFFF\")));\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"background-color\": a0,\n    \"color\": a1\n  };\n};\n\nfunction ExpandableIssueListComponent_div_6_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵlistener(\"click\", function ExpandableIssueListComponent_div_6_div_1_div_1_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const issue_r9 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r16.clickIssue(issue_r9));\n    });\n    i0.ɵɵelementStart(1, \"div\", 11)(2, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function ExpandableIssueListComponent_div_6_div_1_div_1_Template_div_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const issue_r9 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r18.clickIssue(issue_r9));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ExpandableIssueListComponent_div_6_div_1_div_1_button_4_Template, 2, 3, \"button\", 13);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const issue_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(4, _c1, issue_r9.epic && issue_r9.epic.color ? issue_r9.epic.color : \"#FFFFFF\", ctx_r8.fontColor(issue_r9.epic ? issue_r9.epic.color : \"#FFFFFF\")));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" #\", issue_r9.id, \" - \", issue_r9.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.allowRemove);\n  }\n}\n\nfunction ExpandableIssueListComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ExpandableIssueListComponent_div_6_div_1_div_1_Template, 5, 7, \"div\", 9);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx_r7.filteredIssues));\n  }\n}\n\nfunction ExpandableIssueListComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, ExpandableIssueListComponent_div_6_div_1_Template, 3, 3, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.issues)(\"ngIfElse\", _r0);\n  }\n}\n\nexport let ExpandableIssueListComponent = /*#__PURE__*/(() => {\n  class ExpandableIssueListComponent {\n    constructor() {\n      this.filter = null;\n      this.subj = new ReplaySubject(1);\n      this.filteredIssues = this.subj.pipe(map((value, index) => {\n        if (this.filter) {\n          return this.filter(value, index);\n        } else {\n          return value;\n        }\n      }));\n      this.issueSelected = new EventEmitter();\n      this.transfer = new EventEmitter();\n      this.reorder = new EventEmitter();\n      this.issueRemoved = new EventEmitter();\n      this.viewIssue = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    set issues(value) {\n      this._issues = value;\n      this.subj.next(value);\n    }\n\n    get issues() {\n      return this._issues;\n    }\n\n    onDrop(event) {\n      if (event.previousContainer == event.container) {\n        console.log(\"onDrop\"); // moveItemInArray(event.container.data.issues, event.previousIndex, event.currentIndex);\n\n        this.reorder.emit({\n          container: this.container,\n          fromIndex: event.previousIndex,\n          toIndex: event.currentIndex\n        });\n      } else {\n        let issue = event.previousContainer.data.issues[event.previousIndex];\n        this.transfer.emit({\n          from: event.previousContainer,\n          to: event.container,\n          issue: issue,\n          fromIndex: event.previousIndex,\n          toIndex: event.currentIndex\n        });\n      } // if (event.previousContainer == event.container) {\n      //   // just move stuff around\n      //   moveItemInArray(event.container.data.issues, event.previousIndex, event.currentIndex);\n      //   let order = \"\";    \n      //   for (let i of event.container.data.issues) {\n      //     if (order.length > 0) {\n      //       order += \",\";\n      //     }\n      //     order += i.id;\n      //   }\n      //   this.epic.issue_order = order;\n      //   console.log(\"HERE\");\n      //   this.updateEpic.emit(this.epic);\n      // } else {\n      // \tconsole.log(\"HERE\")\n      //   // need to move between containers\n      //   let issue = event.previousContainer.data.issues[event.previousIndex];\n      //   transferArrayItem(event.previousContainer.data.issues, event.container.data.issues, event.previousIndex, event.currentIndex);\n      //   let order1 = \"\";    \n      //   for (let i of event.previousContainer.data.issues) {\n      //     if (order1.length > 0) {\n      //       order1 += \",\";\n      //     }\n      //     order1 += i.id;\n      //   }\n      //   let order2 = \"\";    \n      //   for (let i of event.container.data.issues) {\n      //     if (order2.length > 0) {\n      //       order2 += \",\";\n      //     }\n      //     order2 += i.id;\n      //   }\n      //   let project1 = event.previousContainer.data.project;\n      //   let sprint1 = event.previousContainer.data.sprint;\n      //   let epic1 = event.previousContainer.data.epic;\n      //   let project2 = event.container.data.project;\n      //   let sprint2 = event.container.data.sprint;\n      //   let epic2 = event.container.data.epic;\n      //   if (epic1) {\n      //   \tissue.epic = epic2;\n      //   \tthis.onTransfer.emit({epicId1: epic1.id, order1: order1, epicId2: epic2.id, order2: order2});\n      //   } else {\n      //   \tthis.onTransfer.emit({projectId1: project1.id, sprintId1: sprint1.id, order1: order1, \n      //      projectId2: project2.id, sprintId2: sprint2.id, order2: order2});\n      //   }\n      // }\n\n    }\n\n    fontColor(bgColor) {\n      return Color.fontColor(bgColor);\n    }\n\n    clickIssue(issue) {\n      this.issueSelected.emit(issue);\n    }\n\n    removeIssue(issue) {\n      this.issueRemoved.emit(issue);\n    }\n\n    onViewIssue(event, issue) {\n      event.stopPropagation();\n      this.viewIssue.emit(issue);\n    }\n\n    ngOnDestroy() {}\n\n  }\n\n  ExpandableIssueListComponent.ɵfac = function ExpandableIssueListComponent_Factory(t) {\n    return new (t || ExpandableIssueListComponent)();\n  };\n\n  ExpandableIssueListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExpandableIssueListComponent,\n    selectors: [[\"sb-expandable-issue-list\"]],\n    inputs: {\n      filter: \"filter\",\n      fixed: \"fixed\",\n      container: \"container\",\n      allowRemove: \"allowRemove\",\n      showViewIcon: \"showViewIcon\",\n      issues: \"issues\"\n    },\n    outputs: {\n      issueSelected: \"issueSelected\",\n      transfer: \"transfer\",\n      reorder: \"reorder\",\n      issueRemoved: \"issueRemoved\",\n      viewIssue: \"viewIssue\"\n    },\n    decls: 7,\n    vars: 3,\n    consts: [[\"progressSpinner\", \"\"], [1, \"list-container\", \"issues\"], [1, \"issue-container\", \"column-container\"], [1, \"list\", \"issues\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"list issues\", 4, \"ngIf\"], [1, \"d-flex\", \"justify-content-center\"], [4, \"ngFor\", \"ngForOf\"], [3, \"issue\"], [\"class\", \"fixed-issue-card text-truncate pl-2\", 3, \"ngStyle\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"fixed-issue-card\", \"text-truncate\", \"pl-2\", 3, \"ngStyle\", \"click\"], [1, \"row\", \"align-items-center\"], [1, \"col-10\", \"text-truncate\", \"banner-text\", 3, \"click\"], [\"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", 3, \"click\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-times-circle\", 3, \"ngStyle\"]],\n    template: function ExpandableIssueListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ExpandableIssueListComponent_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3);\n        i0.ɵɵtemplate(5, ExpandableIssueListComponent_div_5_Template, 4, 3, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, ExpandableIssueListComponent_div_6_Template, 2, 2, \"div\", 5);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.issues)(\"ngIfElse\", _r0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.fixed);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i1.NgStyle, i2.MatAccordion, i3.MatIcon, i4.MatButton, i5.MatSpinner, i6.ExpandableIssueComponent, i1.AsyncPipe],\n    styles: [\".issues[_ngcontent-%COMP%]{min-height:30px}.issue-card[_ngcontent-%COMP%]{font-size:small;background:var(--background);border:2px solid var(--card-shadow);border-radius:1px;padding:3px 3px 3px 6px;margin-top:1px}.issue-card[_ngcontent-%COMP%]:hover{cursor:move;border:2px solid #666}.issue-card[_ngcontent-%COMP%]:active{background-color:#999!important}.fixed-issue-card[_ngcontent-%COMP%]{font-size:small;background:var(--background);border:2px solid var(--card-shadow);border-radius:1px;padding:3px 3px 3px 6px;margin-top:1px}.fixed-issue-card[_ngcontent-%COMP%]:hover{cursor:default;border:2px solid #666}.fixed-issue-card[_ngcontent-%COMP%]:active{background-color:#999!important}.issue-card-body[_ngcontent-%COMP%]{font-size:x-small}.issue-id[_ngcontent-%COMP%]{font-family:sans-serif;font-weight:700}.issue-link[_ngcontent-%COMP%]{color:#444}.issue-link[_ngcontent-%COMP%]:hover{text-decoration:none;color:#00f}.issue-title[_ngcontent-%COMP%]{font-family:sans-serif;font-style:italic}.small-button[_ngcontent-%COMP%]{font-size:x-small}.issue-description[_ngcontent-%COMP%]{font-family:sans-serif;background:#ddd}.drag-icon[_ngcontent-%COMP%]{color:#aaa}.issue-panel[_ngcontent-%COMP%]{font-size:small;z-index:1}.issue-progress-bar[_ngcontent-%COMP%]{position:absolute;left:0;top:0;z-index:0;height:.5em;color:red;background-color:orange}\"]\n  });\n  return ExpandableIssueListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}