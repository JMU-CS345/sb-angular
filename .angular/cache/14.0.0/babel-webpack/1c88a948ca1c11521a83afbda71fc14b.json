{"ast":null,"code":"import { CommentsService } from '../comments.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { callWithSnackBar } from '../util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../comments.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nexport let CommentEntryComponent = /*#__PURE__*/(() => {\n  class CommentEntryComponent {\n    constructor(commentsService, snackBar) {\n      this.commentsService = commentsService;\n      this.snackBar = snackBar;\n    }\n\n    ngOnInit() {}\n\n    submitComment() {\n      callWithSnackBar(this.snackBar, this.commentsService.newComment({\n        issueId: this.issueId,\n        epicId: this.epicId,\n        sprintId: this.sprintId,\n        projectId: this.projectId,\n        text: this.text\n      }), ['Saving comment', 'Saved comment', 'Error saving comment']).subscribe(success => this.text = \"\");\n    }\n\n    shouldDisableSubmit() {\n      return !this.text || this.text.trim().length == 0;\n    }\n\n  }\n\n  CommentEntryComponent.ɵfac = function CommentEntryComponent_Factory(t) {\n    return new (t || CommentEntryComponent)(i0.ɵɵdirectiveInject(i1.CommentsService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  CommentEntryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommentEntryComponent,\n    selectors: [[\"sb-comment-entry\"]],\n    inputs: {\n      issueId: \"issueId\",\n      epicId: \"epicId\",\n      projectId: \"projectId\",\n      sprintId: \"sprintId\"\n    },\n    decls: 5,\n    vars: 2,\n    consts: [[\"placeholder\", \"Add new comment\", \"rows\", \"4\", 1, \"comment-text-area\", 3, \"ngModel\", \"onsubmit\", \"ngModelChange\"], [\"mat-button\", \"\", 1, \"comment-button\", 3, \"disabled\", \"click\"], [1, \"mr-1\"]],\n    template: function CommentEntryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"textarea\", 0);\n        i0.ɵɵlistener(\"onsubmit\", function CommentEntryComponent_Template_textarea_onsubmit_0_listener() {\n          return ctx.submitComment();\n        })(\"ngModelChange\", function CommentEntryComponent_Template_textarea_ngModelChange_0_listener($event) {\n          return ctx.text = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CommentEntryComponent_Template_button_click_1_listener() {\n          return ctx.submitComment();\n        });\n        i0.ɵɵelementStart(2, \"mat-icon\", 2);\n        i0.ɵɵtext(3, \"comment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4, \"Add new comment\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.text);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.shouldDisableSubmit());\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.MatIcon, i5.MatButton],\n    styles: [\".comment-text-area[_ngcontent-%COMP%]{width:100%;box-shadow:2px 2px var(--card-shadow);font-family:var(--user-font);background-color:var(--background);color:var(--on-background)}.comment-text-area[_ngcontent-%COMP%]::-moz-placeholder{font-family:var(--menu-font);color:var(--on-background);opacity:40%}.comment-text-area[_ngcontent-%COMP%]::placeholder{font-family:var(--menu-font);color:var(--on-background);opacity:40%}.submit-button[_ngcontent-%COMP%]{font-family:var(--menu-font);background-color:var(--go-button-background);color:var(--on-go-button-background)}\"]\n  });\n  return CommentEntryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}