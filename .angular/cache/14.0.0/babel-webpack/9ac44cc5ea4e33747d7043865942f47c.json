{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { ThemeService } from '../theme/theme.service';\nimport { UsersService } from '../users.service';\nimport { ProjectService } from '../project.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { callWithSnackBar } from '../util';\nimport { first } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InputDialogComponent } from '../input-dialog/input-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../project.service\";\nimport * as i3 from \"../theme/theme.service\";\nimport * as i4 from \"../users.service\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nconst _c0 = [\"displayName\"];\nexport let EditSettingsDialogComponent = /*#__PURE__*/(() => {\n  class EditSettingsDialogComponent {\n    constructor(dialog, projectService, themeService, usersService, snackBar) {\n      this.dialog = dialog;\n      this.projectService = projectService;\n      this.themeService = themeService;\n      this.usersService = usersService;\n      this.snackBar = snackBar;\n    }\n\n    ngOnInit() {}\n\n    changeTheme(newTheme) {\n      this.user.theme = newTheme;\n      this.themeService.setTheme(newTheme);\n      callWithSnackBar(this.snackBar, this.usersService.save({\n        id: this.user.id,\n        theme: newTheme\n      }), [\"Saving setting...\", \"Setting saved\", \"Error saving setting\"]);\n    }\n\n    startEditingDisplayName() {\n      this.originalDisplayName = this.user.displayName;\n    }\n\n    cancelEditingDisplayName() {\n      this.user.displayName = this.originalDisplayName;\n    }\n\n    onDisplayNameKeydown(event) {\n      let chrCode;\n      if (event.charCode) chrCode = event.charCode;else if (event.which) chrCode = event.which;else if (event.keyCode) chrCode = event.keyCode;\n\n      if (chrCode == 13) {\n        this.originalDisplayName = this.user.displayName;\n        event.preventDefault();\n        this.saveDisplayName();\n        this.displayNameEditor.nativeElement.blur();\n        return;\n      } else if (chrCode == 27) {\n        event.preventDefault();\n        this.user.displayName = this.originalDisplayName;\n        this.displayNameEditor.nativeElement.blur();\n        return;\n      }\n    }\n\n    saveDisplayName() {\n      callWithSnackBar(this.snackBar, this.usersService.save({\n        id: this.user.id,\n        displayName: this.user.displayName\n      }), [\"Saving setting...\", \"Setting saved\", \"Error saving setting\"]).pipe(first()).subscribe(x => location.reload());\n    }\n\n    onAddProjectClick() {\n      console.log(\"opening dialog\");\n      const dialogRef = this.dialog.open(InputDialogComponent, {\n        maxWidth: \"400px\",\n        data: {\n          title: \"Add Project\",\n          message: `Enter your project key:`\n        }\n      }); // listen to response\n\n      dialogRef.afterClosed().subscribe(dialogResult => {\n        if (dialogResult) {\n          callWithSnackBar(this.snackBar, this.projectService.joinProject(dialogResult), [\"Joining Project...\", \"Project joined\", \"Error joining project\"]).pipe(first()).subscribe(x => location.reload()); //     this.snackBar.open(\"Deleting Issue...\", null, {\n          //       duration: 30000,\n          //     });\n          //     this.issuesService.deleteIssue(this.data.issue.id).subscribe(\n          //       success => {\n          //         this.snackBar.open(\"Issue Deleted\", null, {\n          //           duration: 2000,\n          //         });\n          //       },\n          //       error => {\n          //         this.snackBar.open(\"Error Deleting Issue\", null, {\n          //           duration: 4000,\n          //         });\n          //       }\n          //     );\n          //     this.dialogRef.close(false);\n        }\n      });\n    }\n\n  }\n\n  EditSettingsDialogComponent.ɵfac = function EditSettingsDialogComponent_Factory(t) {\n    return new (t || EditSettingsDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ProjectService), i0.ɵɵdirectiveInject(i3.ThemeService), i0.ɵɵdirectiveInject(i4.UsersService), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n  };\n\n  EditSettingsDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditSettingsDialogComponent,\n    selectors: [[\"sb-edit-settings-dialog\"]],\n    viewQuery: function EditSettingsDialogComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.displayNameEditor = _t.first);\n      }\n    },\n    inputs: {\n      user: \"user\"\n    },\n    decls: 24,\n    vars: 2,\n    consts: [[\"aria-describedby\", \"User Settings\", \"role\", \"dialog\", 1, \"settings-dialog\"], [\"tabindex\", \"0\", \"role\", \"heading\", 1, \"banner-text\", \"mb-1\"], [\"appearance\", \"fill\", 2, \"width\", \"100%\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\", \"focus\", \"blur\", \"keydown\"], [\"displayName\", \"\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\", \"valueChange\"], [\"value\", \"jmu\"], [\"value\", \"uchicago\"], [\"value\", \"dark-bw\"], [\"value\", \"light\"], [\"value\", \"dark\"], [\"mat-raised-button\", \"\", 1, \"save-button\", 3, \"click\"]],\n    template: function EditSettingsDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Edit User Settings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-form-field\", 2)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Display Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 3, 4);\n        i0.ɵɵlistener(\"ngModelChange\", function EditSettingsDialogComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.user.displayName = $event;\n        })(\"focus\", function EditSettingsDialogComponent_Template_input_focus_6_listener() {\n          return ctx.startEditingDisplayName();\n        })(\"blur\", function EditSettingsDialogComponent_Template_input_blur_6_listener() {\n          return ctx.cancelEditingDisplayName();\n        })(\"keydown\", function EditSettingsDialogComponent_Template_input_keydown_6_listener($event) {\n          return ctx.onDisplayNameKeydown($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"UI Theme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function EditSettingsDialogComponent_Template_mat_select_ngModelChange_11_listener($event) {\n          return ctx.user.theme = $event;\n        })(\"valueChange\", function EditSettingsDialogComponent_Template_mat_select_valueChange_11_listener($event) {\n          return ctx.changeTheme($event);\n        });\n        i0.ɵɵelementStart(12, \"mat-option\", 6);\n        i0.ɵɵtext(13, \"James Madison University\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-option\", 7);\n        i0.ɵɵtext(15, \"University of Chicago\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-option\", 8);\n        i0.ɵɵtext(17, \"Black and White\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-option\", 9);\n        i0.ɵɵtext(19, \"Soft\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-option\", 10);\n        i0.ɵɵtext(21, \"Dark\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function EditSettingsDialogComponent_Template_button_click_22_listener() {\n          return ctx.onAddProjectClick();\n        });\n        i0.ɵɵtext(23, \"Add Project\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.displayName);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.theme);\n      }\n    },\n    dependencies: [i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel, i7.MatButton, i8.MatFormField, i8.MatLabel, i9.MatInput, i10.MatSelect, i11.MatOption],\n    styles: [\".settings-dialog[_ngcontent-%COMP%]{background-color:var(--background)}\"]\n  });\n  return EditSettingsDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}