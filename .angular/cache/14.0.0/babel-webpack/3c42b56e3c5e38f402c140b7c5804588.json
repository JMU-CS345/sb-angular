{"ast":null,"code":"import { moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { IssuesService } from \"../issues.service\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Base } from '../base';\nimport { UiStateService } from '../ui-state.service';\nimport { Router } from '@angular/router';\nimport { TasksService } from '../tasks.service';\nimport { DataService } from '../data.service';\nimport { callWithSnackBar } from '../util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"../tasks.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"../ui-state.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"../issues.service\";\n\nfunction TasksComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction TasksComponent_div_2_div_2_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 12);\n  }\n}\n\nfunction TasksComponent_div_2_div_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, TasksComponent_div_2_div_2_div_4_div_1_Template, 1, 0, \"div\", 10);\n    i0.ɵɵelement(2, \"sb-task-card\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"task\", task_r8)(\"editCoordinator\", ctx_r7.editCoordinator);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    tasks: a0,\n    issue: a1\n  };\n};\n\nfunction TasksComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6, 7);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function TasksComponent_div_2_div_2_Template_div_cdkDropListDropped_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onDrop($event));\n    });\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtemplate(4, TasksComponent_div_2_div_2_div_4_Template, 3, 2, \"div\", 8);\n    i0.ɵɵpipe(5, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"cdkDropListData\", i0.ɵɵpureFunction2(6, _c0, i0.ɵɵpipeBind1(2, 2, ctx_r3.tasks), ctx_r3.issue));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 4, ctx_r3.tasks).tasks.list);\n  }\n}\n\nfunction TasksComponent_div_2_ng_template_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelement(1, \"sb-task-card\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"task\", task_r14)(\"editable\", false);\n  }\n}\n\nfunction TasksComponent_div_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\");\n    i0.ɵɵtemplate(2, TasksComponent_div_2_ng_template_3_div_2_Template, 2, 2, \"div\", 14);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx_r5.tasks).tasks.list);\n  }\n}\n\nfunction TasksComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵtemplate(2, TasksComponent_div_2_div_2_Template, 6, 9, \"div\", 4);\n    i0.ɵɵtemplate(3, TasksComponent_div_2_ng_template_3_Template, 4, 3, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(4);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.editable)(\"ngIfElse\", _r4);\n  }\n}\n\nexport class EditCoordinator {}\nexport let TasksComponent = /*#__PURE__*/(() => {\n  class TasksComponent extends Base {\n    constructor(dataService, tasksService, dialog, snackBar, uiStateService, router, issuesService) {\n      super();\n      this.dataService = dataService;\n      this.tasksService = tasksService;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.uiStateService = uiStateService;\n      this.router = router;\n      this.issuesService = issuesService;\n      this.editCoordinator = new EditCoordinator();\n    }\n\n    ngOnInit() {\n      this.refreshList();\n    }\n\n    set issue(value) {\n      this._issue = value;\n      this.refreshList();\n    }\n\n    get issue() {\n      return this._issue;\n    }\n\n    refreshList() {\n      this.dataService.load(`issues/${this.issue.id}/tasks`, [`issues/${this.issue.id}/tasks`, `issues/${this.issue.id}/tasks/*`]);\n      this.tasks = this.dataService.values[`issues/${this.issue.id}/tasks`];\n    }\n\n    ngOnDestroy() {\n      this.dataService.unload(`issues/${this.issue.id}/tasks`, [`issues/${this.issue.id}/tasks`, `issues/${this.issue.id}/tasks/*`]);\n    }\n\n    onDrop(event) {\n      console.log(\"foo\");\n      let tmp = JSON.parse(JSON.stringify(event.container.data.tasks));\n      moveItemInArray(tmp.tasks.list, event.previousIndex, event.currentIndex);\n      this.dataService.update(`issues/${this.issue.id}/tasks`, tmp);\n      callWithSnackBar(this.snackBar, this.issuesService.reorderTasks(this.issue, event.previousIndex, event.currentIndex), ['Reordering tasks...', 'Tasks reordered', 'Error reordering tasks']);\n    }\n\n  }\n\n  TasksComponent.ɵfac = function TasksComponent_Factory(t) {\n    return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.TasksService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i5.UiStateService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i7.IssuesService));\n  };\n\n  TasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksComponent,\n    selectors: [[\"app-tasks\"]],\n    inputs: {\n      editable: \"editable\",\n      issue: \"issue\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 4,\n    consts: [[\"progressSpinner\", \"\"], [\"class\", \"list-container tasks\", 4, \"ngIf\", \"ngIfElse\"], [1, \"list-container\", \"tasks\"], [1, \"task-container\", \"column-container\"], [\"class\", \"list tasks\", \"cdkDropList\", \"\", 3, \"cdkDropListData\", \"cdkDropListDropped\", 4, \"ngIf\", \"ngIfElse\"], [\"staticList\", \"\"], [\"cdkDropList\", \"\", 1, \"list\", \"tasks\", 3, \"cdkDropListData\", \"cdkDropListDropped\"], [\"taskList\", \"cdkDropList\"], [\"class\", \"task-card text-truncate\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"task-card\", \"text-truncate\"], [\"class\", \"drag-placeholder\", 4, \"cdkDragPlaceholder\"], [3, \"task\", \"editCoordinator\"], [1, \"drag-placeholder\"], [1, \"list\", \"tasks\"], [\"class\", \"task-card text-truncate\", 4, \"ngFor\", \"ngForOf\"], [1, \"task-card\", \"text-truncate\"], [3, \"task\", \"editable\"]],\n    template: function TasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TasksComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, TasksComponent_div_2_Template, 5, 2, \"div\", 1);\n        i0.ɵɵpipe(3, \"async\");\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 2, ctx.tasks))(\"ngIfElse\", _r0);\n      }\n    },\n    styles: [\".tasks[_ngcontent-%COMP%]{min-height:30px}.task-card[_ngcontent-%COMP%]{font-size:small;background:var(--background);border:2px solid var(--card-shadow);border-radius:1px;padding:3px 3px 3px 6px;margin-top:1px}.task-card[_ngcontent-%COMP%]:hover{border-color:var(--card-border-hover);cursor:default}.task-card-body[_ngcontent-%COMP%], .small-button[_ngcontent-%COMP%]{font-size:x-small}\"]\n  });\n  return TasksComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}