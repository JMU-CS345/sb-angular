{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { ThemeService } from './theme.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./theme.service\";\nexport let ThemeDirective = /*#__PURE__*/(() => {\n  class ThemeDirective {\n    constructor(_elementRef, _themeService, _document) {\n      this._elementRef = _elementRef;\n      this._themeService = _themeService;\n      this._document = _document;\n      /**\n       * Whether the styles are scoped or not.\n       */\n\n      this.scoped = false;\n      this._destroy$ = new Subject();\n    }\n\n    ngOnInit() {\n      const active = this._themeService.getActiveTheme();\n\n      if (active) {\n        this.updateTheme(active);\n      }\n\n      this._themeService.themeChange.pipe(takeUntil(this._destroy$)).subscribe(theme => this.updateTheme(theme));\n    }\n\n    ngOnDestroy() {\n      this._destroy$.next();\n\n      this._destroy$.complete();\n    }\n    /**\n     * Update the theme on the scoped element.\n     */\n\n\n    updateTheme(theme) {\n      if (theme.fonts) {\n        let head = this._document.getElementsByTagName('head')[0];\n\n        let link = this._document.createElement('link');\n\n        link.rel = 'stylesheet';\n        link.type = 'text/css';\n        link.href = theme.fonts;\n        head.appendChild(link);\n      }\n\n      const element = this.getElement(); // project properties onto the element\n\n      for (const key in theme.properties) {\n        element.style.setProperty(key, theme.properties[key]);\n      } // remove old theme\n\n\n      for (const name of this._themeService.theme) {\n        element.classList.remove(`${name}-theme`);\n      } // alias element with theme name\n\n\n      element.classList.add(`${theme.name}-theme`);\n    }\n    /**\n     * Element to attach the styles to.\n     */\n\n\n    getElement() {\n      return this.scoped ? this._elementRef.nativeElement : this._document.body;\n    }\n\n  }\n\n  ThemeDirective.ɵfac = function ThemeDirective_Factory(t) {\n    return new (t || ThemeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ThemeService), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n\n  ThemeDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ThemeDirective,\n    selectors: [[\"\", \"theme\", \"\"]],\n    inputs: {\n      scoped: \"scoped\"\n    }\n  });\n  return ThemeDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}