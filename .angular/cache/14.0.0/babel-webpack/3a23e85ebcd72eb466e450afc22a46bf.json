{"ast":null,"code":"import { TasksService } from '../tasks.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { callWithSnackBar } from '../util';\nimport { Base } from '../base';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EditTaskDialogComponent } from '../edit-task-dialog/edit-task-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../tasks.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/tooltip\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@angular/material/checkbox\";\n\nfunction CheckableTaskEntryComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 2);\n  }\n}\n\nfunction CheckableTaskEntryComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"span\", 4)(2, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function CheckableTaskEntryComponent_div_2_Template_a_click_2_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.showTaskDetails());\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"span\", 7)(7, \"mat-checkbox\", 8, 9);\n    i0.ɵɵlistener(\"change\", function CheckableTaskEntryComponent_div_2_Template_mat_checkbox_change_7_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onCheckboxChange($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r2.task.title + \" (\" + ctx_r2.task.estimate + \" hours)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"#\", ctx_r2.task.id, \" - \", ctx_r2.task.title, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r2.task.estimate, \" hours)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.permission(ctx_r2.task, \"update\"))(\"checked\", ctx_r2.task.state == \"complete\");\n  }\n}\n\nexport let CheckableTaskEntryComponent = /*#__PURE__*/(() => {\n  class CheckableTaskEntryComponent extends Base {\n    constructor(tasksService, snackBar, dialog) {\n      super();\n      this.tasksService = tasksService;\n      this.snackBar = snackBar;\n      this.dialog = dialog;\n    }\n\n    ngOnInit() {}\n\n    onCheckboxChange(event) {\n      callWithSnackBar(this.snackBar, this.tasksService.setComplete(this.task.id, event.checked), [\"Updating task...\", \"Task updated\", \"Error updating task\"]);\n    }\n\n    showTaskDetails() {\n      const dialogRef = this.dialog.open(EditTaskDialogComponent, {\n        width: '90%',\n        data: this.task,\n        disableClose: false\n      });\n      dialogRef.componentInstance.newTaskMode = false;\n      dialogRef.componentInstance.infoMode = true;\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.update(this.task);\n        }\n      });\n    }\n\n    update(task) {\n      callWithSnackBar(this.snackBar, this.tasksService.save(task), [\"Updating task...\", \"Task updated\", \"Error updating task\"]);\n    }\n\n  }\n\n  CheckableTaskEntryComponent.ɵfac = function CheckableTaskEntryComponent_Factory(t) {\n    return new (t || CheckableTaskEntryComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  CheckableTaskEntryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckableTaskEntryComponent,\n    selectors: [[\"sb-checkable-task-entry\"]],\n    inputs: {\n      task: \"task\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[\"progressSpinner\", \"\"], [\"class\", \"ml-1 row text-truncate task-card\", 4, \"ngIf\", \"ngIfElse\"], [\"diameter\", \"32\", 2, \"min-height\", \"32px\", \"position\", \"relative\", \"left\", \"16px\"], [1, \"ml-1\", \"row\", \"text-truncate\", \"task-card\"], [1, \"col-10\", \"text-wrap\", 3, \"matTooltip\"], [1, \"text-wrap\", \"banner-text\", \"mr-1\", 3, \"click\"], [1, \"menu-text\"], [1, \"col-2\", \"mt-3\"], [\"color\", \"primary\", 3, \"disabled\", \"checked\", \"change\"], [\"checkbox\", \"\"]],\n    template: function CheckableTaskEntryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CheckableTaskEntryComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, CheckableTaskEntryComponent_div_2_Template, 9, 6, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.task)(\"ngIfElse\", _r0);\n      }\n    },\n    dependencies: [i4.NgIf, i5.MatTooltip, i6.MatSpinner, i7.MatCheckbox],\n    styles: [\".tasks[_ngcontent-%COMP%]{min-height:30px}.task-card[_ngcontent-%COMP%]{font-family:var(--text-font);font-size:small;background:var(--background);border-radius:1px;border-width:1px;border-color:var(--card-border);border-style:solid;padding:3px 3px 3px 6px;color:#000}.task-card[_ngcontent-%COMP%]:hover{background:var(--background-hover);cursor:default;filter:drop-shadow(1px 1px var(--button-shadow))}.small-button[_ngcontent-%COMP%]{font-size:x-small}\"]\n  });\n  return CheckableTaskEntryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}